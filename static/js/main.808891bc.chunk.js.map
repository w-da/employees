{"version":3,"sources":["components/EmployeesList/EmployeesList.module.css","components/EmployeesBirhtdayGroup/EmployeesBirhtdayGroup.module.css","components/BirthdayList/BirthdayList.module.css","components/EmployeeBirthdayInfo/EmployeeBirthdayInfo.module.css","components/Loader/Loader.module.css","components/Employees/Employees.module.css","components/EmployeeInfo/EmployeeInfo.module.css","store/reducers/employeesReducer.ts","store/reducers/rootReducer.ts","store/store.ts","components/Loader/Loader.tsx","helpers/constants.ts","store/actions/employeesActions.ts","components/EmployeeInfo/EmployeeInfo.tsx","components/EmployeesLetterGroup/EmployeesLetterGroup.tsx","components/EmployeesList/EmployeesList.tsx","store/selectors/employeesSelectors.ts","helpers/helpers.ts","components/EmployeeBirthdayInfo/EmployeeBirthdayInfo.tsx","components/EmployeesBirhtdayGroup/EmployeesBirhtdayGroup.tsx","components/BirthdayList/BirthdayList.tsx","helpers/employeesHelpers.ts","components/Employees/Employees.tsx","store/thunks/employeesThunk.ts","App.tsx","index.tsx","components/EmployeesLetterGroup/EmployeesLetterGroup.module.css"],"names":["module","exports","initialState","employees","error","isLoading","rootReducer","combineReducers","state","action","type","payload","map","employee","id","isActive","value","middleware","thunk","enhancer","composeWithDevTools","applyMiddleware","store","createStore","Loader","className","styles","loaderContainer","color","height","width","ALPHABET","setEmployees","EmployeeInfo","dispatch","useDispatch","handleActiveChange","e","booleanValue","target","updateEmployee","employeeInfo","employeeInfo__name","active","lastName","firstName","name","defaultChecked","onChange","htmlFor","employeeInfo__label","EmployeesLetterGroup","letter","employeesList","employeeGroup","employeeGroup__letter","toUpperCase","length","employeeGroup__list","EmployeesList","employeesList__title","employeesList__list","getEmployeesFromStore","getIsLoading","getError","isEmptyObject","obj","Object","keys","EmployeeBirthdayInfo","EmployeeBirthdayInfo__text","moment","dob","format","EmployeesBirhtdayGroup","month","employeesBirthdayGroup","employeesBirthdayGroup__month","employeesBirthdayGroup__list","BirthdayList","months","result","currentMonth","m","i","push","getMonthsFromCurrent","normalizedEmployees","reduce","acc","monthOfBirth","normalizeActiveEmployeesByMonth","birthdayList","birthdayList__title","birthdayList__list","Employees","useSelector","useEffect","employeesFromStorage","localStorage","getItem","JSON","parse","axios","get","then","sortedEmployees","data","sort","a","b","localeCompare","catch","setError","message","setItem","stringify","toLowerCase","normalizeEmployees","container","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,cAAgB,qCAAqC,qBAAuB,4CAA4C,oBAAsB,6C,mBCAhKD,EAAOC,QAAU,CAAC,uBAAyB,uDAAuD,8BAAgC,gE,mBCAlID,EAAOC,QAAU,CAAC,aAAe,mCAAmC,oBAAsB,0CAA0C,mBAAqB,2C,mBCAzJD,EAAOC,QAAU,CAAC,qBAAuB,mDAAmD,2BAA6B,2D,mBCAzHD,EAAOC,QAAU,CAAC,gBAAkB,kC,mBCApCD,EAAOC,QAAU,CAAC,UAAY,+B,uCCA9BD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,mBAAqB,yCAAyC,OAAS,6BAA6B,oBAAsB,4C,8ICExLC,EAAsC,CAC1CC,UAAW,GACXC,MAAO,KACPC,WAAW,GCHAC,EAAcC,0BAAgB,CACzCJ,UDK8B,WAA2C,IAA1CK,EAAyC,uDAAjCN,EAAcO,EAAmB,uCACxE,OAAQA,EAAOC,MACb,IAAK,gBACH,MAAO,CACLP,UAAWM,EAAOE,QAAQR,UAC1BC,MAAO,KACPC,WAAW,GAGf,IAAK,kBACH,MAAO,CACLF,UAAWK,EAAML,UAAUS,KAAI,SAAAC,GAC7B,OAAIA,EAASC,KAAOL,EAAOE,QAAQG,GACZ,2BAChBD,GADgB,IAEnBE,SAAUN,EAAOE,QAAQK,QAKtBH,KAETT,MAAO,KACPC,WAAW,GAGf,IAAK,UACH,MAAO,CACLF,UAAW,GACXC,MAAO,KACPC,WAAW,GAGf,IAAK,QACH,MAAO,CACLF,UAAW,GACXE,WAAW,EACXD,MAAOK,EAAOE,QAAQP,OAG1B,QACE,OAAOI,ME5CPS,EAAa,CAACC,KACdC,EAAWC,8BAAoBC,kBAAe,WAAf,EAAmBJ,IAE3CK,EAAQC,sBAAYjB,EAAaa,G,yCCLvC,SAASK,IACd,OACE,qBAAKC,UAAWC,IAAOC,gBAAvB,SACE,cAAC,IAAD,CAASjB,KAAK,QAAQkB,MAAM,OAAOC,OAAQ,IAAKC,MAAO,QCPtD,IAGMC,EAAW,CACtB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KC3BWC,EAAe,SAAC7B,GAAD,MAAiC,CAC3DO,KAAM,gBACNC,QAAS,CACPR,e,gBCMG,SAAS8B,EAAT,GAA4D,IAApCpB,EAAmC,EAAnCA,SACvBqB,EAAWC,cAEjB,SAASC,EAAmBC,GAC1B,IACMC,EAAyB,SADbD,EAAEE,OAAZvB,MAERkB,EDR0B,SAACpB,EAAYE,GAAb,MAAiC,CAC7DN,KAAM,kBACNC,QAAS,CACPG,KACAE,UCISwB,CAAe3B,EAASC,GAAIwB,IAGvC,OACE,qBAAIb,UAAWC,IAAOe,aAAtB,UACE,oBACEhB,UAAS,UAAKC,IAAOgB,mBAAZ,YACP7B,EAASE,SAAWW,IAAOiB,OAAS,IAFxC,UAKG9B,EAAS+B,SALZ,IAKuB/B,EAASgC,aAEhC,iCACE,uBACEnC,KAAK,QACLI,GAAE,UAAKD,EAASC,GAAd,SACFgC,KAAMjC,EAASC,GACfE,MAAM,QACN+B,gBAAgBlC,EAASE,SACzBiC,SAAUZ,IAEZ,wBACEa,QAAO,UAAKpC,EAASC,GAAd,SACPW,UAAWC,IAAOwB,oBAFpB,UAIG,IAJH,gBAOA,uBACA,uBACExC,KAAK,QACLI,GAAE,UAAKD,EAASC,GAAd,QACFgC,KAAMjC,EAASC,GACfE,MAAM,OACN+B,iBAAgBlC,EAASE,SACzBiC,SAAUZ,IAEZ,wBACEa,QAAO,UAAKpC,EAASC,GAAd,QACPW,UAAWC,IAAOwB,oBAFpB,UAIG,IAJH,kB,oBC5CD,SAASC,EAAT,GAG4B,IAFjCC,EAEgC,EAFhCA,OAEgC,IADhCC,qBACgC,MADhB,GACgB,EAChC,OACE,qBAAI5B,UAAWC,IAAO4B,cAAtB,UACE,oBAAI7B,UAAWC,IAAO6B,sBAAtB,SAA8CH,EAAOI,iBACnDH,EAAcI,QAAU,qCACA,IAAzBJ,EAAcI,QACb,oBAAIhC,UAAWC,IAAOgC,oBAAtB,SACGL,EAAczC,KAAI,SAAAC,GACjB,OAAO,cAACoB,EAAD,CAAgCpB,SAAUA,GAAvBA,EAASC,Y,qBCXxC,SAAS6C,EAAT,GAA+D,IAAtCxD,EAAqC,EAArCA,UAC9B,OACE,0BAASsB,UAAWC,IAAO2B,cAA3B,UACE,oBAAI5B,UAAWC,IAAOkC,qBAAtB,uBACA,oBAAInC,UAAWC,IAAOmC,oBAAtB,SACG9B,EAASnB,KAAI,SAAAwC,GACZ,OACE,cAACD,EAAD,CAEEC,OAAQA,EACRC,cAAelD,EAAUiD,IAFpBA,W,oBChBZ,IAAMU,EAAwB,SAACtD,GAAD,OACnCA,EAAML,UAAUA,WACL4D,EAAe,SAACvD,GAAD,OAAsBA,EAAML,UAAUE,WACrD2D,EAAW,SAACxD,GAAD,OAAsBA,EAAML,UAAUC,O,iBCLvD,SAAS6D,EAAcC,GAC5B,OAAmC,IAA5BC,OAAOC,KAAKF,GAAKT,O,qBCQnB,SAASY,EAAT,GAE4B,IADjCxD,EACgC,EADhCA,SAEA,OACE,oBAAIY,UAAWC,IAAO2C,qBAAtB,SACE,oBAAG5C,UAAWC,IAAO4C,2BAArB,UACGzD,EAAS+B,SADZ,IACuB/B,EAASgC,UADhC,KAC6C,IAC1C0B,IAAO1D,EAAS2D,KAAKC,OAAO,gBAF/B,a,qBCJC,SAASC,EAAT,GAG8B,IAFnCC,EAEkC,EAFlCA,MACAtB,EACkC,EADlCA,cAEA,OAAKA,EAGH,qBAAI5B,UAAWC,IAAOkD,uBAAtB,UACE,oBAAInD,UAAWC,IAAOmD,8BAAtB,SAAsDF,IAC5B,IAAzBtB,EAAcI,QACb,oBAAIhC,UAAWC,IAAOoD,6BAAtB,SACGzB,EAAczC,KAAI,SAAAC,GACjB,OACE,cAACwD,EAAD,CAAwCxD,SAAUA,GAAvBA,EAASC,YATrB,K,qBCAtB,SAASiE,EAAT,GAA6D,IAArC5E,EAAoC,EAApCA,UACvB6E,ECcD,WAKL,IAJA,IAAMC,EAAS,GACTC,EAAeX,MAASI,QAExBQ,EAAIZ,MACDa,EAAIF,EAAcE,EAAIF,EAAe,GAAIE,IAChDH,EAAOI,KAAKF,EAAER,MAAMS,GAAGX,OAAO,SAGhC,OAAOQ,EDvBQK,GACTC,ECyBD,SAAyCpF,GAiB9C,OAhB4BA,EAAUqF,QACpC,SAACC,EAA8B5E,GAC7B,GAAIA,EAASE,SAAU,CACrB,IAAM2E,EAAenB,IAAO1D,EAAS2D,KAAKC,OAAO,QAE5CgB,EAAIC,GAGPD,EAAIC,GAAcL,KAAKxE,GAFvB4E,EAAIC,GAAgB,CAAC7E,GAKzB,OAAO4E,IAET,IDvC0BE,CAAgCxF,GAE5D,OACE,0BAASsB,UAAWC,IAAOkE,aAA3B,UACE,oBAAInE,UAAWC,IAAOmE,oBAAtB,gCACC5B,EAAcsB,IAAwB,0DACrCtB,EAAcsB,IACd,oBAAI9D,UAAWC,IAAOoE,mBAAtB,SACGd,EAAOpE,KAAI,SAAA+D,GAAK,OACf,cAACD,EAAD,CAEEC,MAAOA,EACPtB,cAAa,OAAEkC,QAAF,IAAEA,OAAF,EAAEA,EAAsBZ,IAFhCA,W,qBERZ,SAASoB,IACd,IAAM5F,EAAY6F,YAAYlC,GACxBzD,EAAY2F,YAAYjC,GACxB3D,EAAQ4F,YAAYhC,GAEpB9B,EAAWC,cAgBjB,GAdA8D,qBAAU,WACR,IAAMC,EAAuBC,aAAaC,QAAQ,aAE7CF,GAAoE,IAA5CG,KAAKC,MAAMJ,GAAsBzC,QAC5DvB,GCpB4B,SAACA,GACjCA,EXc+B,CAC/BxB,KAAM,YWbN6F,IACGC,IZZH,kEYaGC,MAAK,YAA8B,IAC5BC,EAD2B,EAA1BC,KFTR/F,KAAI,SAAAC,GAEH,OADAA,EAASE,UAAW,EACbF,KAER+F,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEjE,SAASmE,cAAcD,EAAElE,aEOzCV,EAASF,EAAa0E,OAEvBM,OAAM,SAAA5G,GAAK,OAAI8B,EXDI,SAAC9B,GAAD,MAAoB,CAC1CM,KAAM,QACNC,QAAS,CACPP,UWFyB6G,CAAS7G,EAAM8G,gBDapChB,GACFhE,EAASF,EAAaqE,KAAKC,MAAMJ,OAClC,CAAChE,IAEJ+D,qBAAU,WACRE,aAAagB,QAAQ,YAAad,KAAKe,UAAUjH,MAChD,CAACA,IAEAC,EAAO,OAAO,6BAAKA,IACvB,GAAIC,GAAkC,IAArBF,EAAUsD,OAAc,OAAO,cAACjC,EAAD,IAEhD,IAAM+D,ED9BD,SAA4BpF,GAcjC,OAb4BA,EAAUqF,QACpC,SAACC,EAA8B5E,GAC7B,IAAMuC,EAASvC,EAAS+B,SAAS,GAAGyE,cAMpC,OALK5B,EAAIrC,GAGPqC,EAAIrC,GAAQiC,KAAKxE,GAFjB4E,EAAIrC,GAAU,CAACvC,GAIV4E,IAET,ICmB0B6B,CAAmBnH,GAE/C,OACE,uBAAMsB,UAAWC,IAAO6F,UAAxB,UACE,cAAC5D,EAAD,CAAexD,UAAWoF,IAC1B,cAACR,EAAD,CAAc5E,UAAWA,O,YElChBqH,OARf,WACE,OACE,qBAAK/F,UAAU,MAAf,SACE,cAACsE,EAAD,OCAN0B,IAASC,OACP,cAAC,IAAD,CAAUpG,MAAOA,EAAjB,SACE,cAAC,IAAMqG,WAAP,UACE,cAAC,GAAD,QAGJC,SAASC,eAAe,U,kBCb1B7H,EAAOC,QAAU,CAAC,cAAgB,4CAA4C,sBAAwB,uD","file":"static/js/main.808891bc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"employeesList\":\"EmployeesList_employeesList__2Q2Ap\",\"employeesList__title\":\"EmployeesList_employeesList__title__1cIIS\",\"employeesList__list\":\"EmployeesList_employeesList__list__3piRc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"employeesBirthdayGroup\":\"EmployeesBirhtdayGroup_employeesBirthdayGroup__1fD-p\",\"employeesBirthdayGroup__month\":\"EmployeesBirhtdayGroup_employeesBirthdayGroup__month__oCyBt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"birthdayList\":\"BirthdayList_birthdayList__2lQID\",\"birthdayList__title\":\"BirthdayList_birthdayList__title__11wOJ\",\"birthdayList__list\":\"BirthdayList_birthdayList__list__rbxNL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"EmployeeBirthdayInfo\":\"EmployeeBirthdayInfo_EmployeeBirthdayInfo__EVyiT\",\"EmployeeBirthdayInfo__text\":\"EmployeeBirthdayInfo_EmployeeBirthdayInfo__text__1i8M8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderContainer\":\"Loader_loaderContainer__2g0n-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Employees_container__2KHpw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"employeeInfo\":\"EmployeeInfo_employeeInfo__1Bfak\",\"employeeInfo__name\":\"EmployeeInfo_employeeInfo__name__EwjSR\",\"active\":\"EmployeeInfo_active__1PS43\",\"employeeInfo__label\":\"EmployeeInfo_employeeInfo__label__237f1\"};","import { Action } from '../../types/types';\r\nimport { InitialEmployeesState } from '../../types/types';\r\n\r\nconst initialState: InitialEmployeesState = {\r\n  employees: [],\r\n  error: null,\r\n  isLoading: false,\r\n};\r\n\r\nexport const employeesReducer = (state = initialState, action: Action) => {\r\n  switch (action.type) {\r\n    case 'SET_EMPLOYEES':\r\n      return {\r\n        employees: action.payload.employees,\r\n        error: null,\r\n        isLoading: false,\r\n      };\r\n\r\n    case 'UPDATE_EMPLOYEE':\r\n      return {\r\n        employees: state.employees.map(employee => {\r\n          if (employee.id === action.payload.id) {\r\n            const updatedEmployee = {\r\n              ...employee,\r\n              isActive: action.payload.value,\r\n            };\r\n            return updatedEmployee;\r\n          }\r\n\r\n          return employee;\r\n        }),\r\n        error: null,\r\n        isLoading: false,\r\n      };\r\n\r\n    case 'LOADING':\r\n      return {\r\n        employees: [],\r\n        error: null,\r\n        isLoading: true,\r\n      };\r\n\r\n    case 'ERROR':\r\n      return {\r\n        employees: [],\r\n        isLoading: false,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { employeesReducer } from './employeesReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  employees: employeesReducer,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { rootReducer } from './reducers/rootReducer';\r\n\r\nconst middleware = [thunk];\r\nconst enhancer = composeWithDevTools(applyMiddleware(...middleware));\r\n\r\nexport const store = createStore(rootReducer, enhancer);\r\n","import Spinner from 'react-loader-spinner';\r\n\r\nimport styles from './Loader.module.css';\r\n\r\nexport function Loader() {\r\n  return (\r\n    <div className={styles.loaderContainer}>\r\n      <Spinner type=\"Rings\" color=\"teal\" height={100} width={100} />\r\n    </div>\r\n  );\r\n}\r\n","export const BASE_URL =\r\n  'https://yalantis-react-school-api.yalantis.com/api/task0/users';\r\n\r\nexport const ALPHABET = [\r\n  'a',\r\n  'b',\r\n  'c',\r\n  'd',\r\n  'e',\r\n  'f',\r\n  'g',\r\n  'h',\r\n  'i',\r\n  'j',\r\n  'k',\r\n  'l',\r\n  'm',\r\n  'n',\r\n  'o',\r\n  'p',\r\n  'q',\r\n  'r',\r\n  's',\r\n  't',\r\n  'u',\r\n  'v',\r\n  'w',\r\n  'x',\r\n  'y',\r\n  'z',\r\n];\r\n","import { EmployeesType } from '../../types/types';\r\n\r\nexport const setEmployees = (employees: EmployeesType[]) => ({\r\n  type: 'SET_EMPLOYEES',\r\n  payload: {\r\n    employees,\r\n  },\r\n});\r\n\r\nexport const updateEmployee = (id: string, value: boolean) => ({\r\n  type: 'UPDATE_EMPLOYEE',\r\n  payload: {\r\n    id,\r\n    value,\r\n  },\r\n});\r\n\r\nexport const setError = (error: string) => ({\r\n  type: 'ERROR',\r\n  payload: {\r\n    error,\r\n  },\r\n});\r\n\r\nexport const setLoading = () => ({\r\n  type: 'LOADING',\r\n});\r\n","import { useDispatch } from 'react-redux';\r\n\r\nimport { EmployeesType } from '../../types/types';\r\nimport { updateEmployee } from '../../store/actions/employeesActions';\r\n\r\nimport styles from './EmployeeInfo.module.css';\r\n\r\ntype EmployeeInfoPropsType = {\r\n  employee: EmployeesType;\r\n};\r\n\r\nexport function EmployeeInfo({ employee }: EmployeeInfoPropsType) {\r\n  const dispatch = useDispatch();\r\n\r\n  function handleActiveChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n    const { value } = e.target;\r\n    const booleanValue = value === 'true' ? true : false;\r\n    dispatch(updateEmployee(employee.id, booleanValue));\r\n  }\r\n\r\n  return (\r\n    <li className={styles.employeeInfo}>\r\n      <p\r\n        className={`${styles.employeeInfo__name} ${\r\n          employee.isActive ? styles.active : ''\r\n        }`}\r\n      >\r\n        {employee.lastName} {employee.firstName}\r\n      </p>\r\n      <form>\r\n        <input\r\n          type=\"radio\"\r\n          id={`${employee.id}False`}\r\n          name={employee.id}\r\n          value=\"false\"\r\n          defaultChecked={employee.isActive ? false : true}\r\n          onChange={handleActiveChange}\r\n        />\r\n        <label\r\n          htmlFor={`${employee.id}False`}\r\n          className={styles.employeeInfo__label}\r\n        >\r\n          {' '}\r\n          Not active\r\n        </label>\r\n        <br />\r\n        <input\r\n          type=\"radio\"\r\n          id={`${employee.id}True`}\r\n          name={employee.id}\r\n          value=\"true\"\r\n          defaultChecked={employee.isActive ? true : false}\r\n          onChange={handleActiveChange}\r\n        />\r\n        <label\r\n          htmlFor={`${employee.id}True`}\r\n          className={styles.employeeInfo__label}\r\n        >\r\n          {' '}\r\n          Active\r\n        </label>\r\n      </form>\r\n    </li>\r\n  );\r\n}\r\n","import { EmployeesType } from '../../types/types';\r\nimport { EmployeeInfo } from '../EmployeeInfo/EmployeeInfo';\r\n\r\nimport styles from './EmployeesLetterGroup.module.css';\r\n\r\ntype EmployeesLetterGroupPropsType = {\r\n  letter: string;\r\n  employeesList: EmployeesType[];\r\n};\r\n\r\nexport function EmployeesLetterGroup({\r\n  letter,\r\n  employeesList = [],\r\n}: EmployeesLetterGroupPropsType) {\r\n  return (\r\n    <li className={styles.employeeGroup}>\r\n      <h3 className={styles.employeeGroup__letter}>{letter.toUpperCase()}</h3>\r\n      {!employeesList.length && <p>----</p>}\r\n      {employeesList.length !== 0 && (\r\n        <ul className={styles.employeeGroup__list}>\r\n          {employeesList.map(employee => {\r\n            return <EmployeeInfo key={employee.id} employee={employee} />;\r\n          })}\r\n        </ul>\r\n      )}\r\n    </li>\r\n  );\r\n}\r\n","import { NormalizedEmployeesType } from '../../types/types';\r\nimport { ALPHABET } from '../../helpers/constants';\r\nimport { EmployeesLetterGroup } from '../EmployeesLetterGroup/EmployeesLetterGroup';\r\n\r\nimport styles from './EmployeesList.module.css';\r\n\r\ntype EmployeesListPropTypes = {\r\n  employees: NormalizedEmployeesType;\r\n};\r\n\r\nexport function EmployeesList({ employees }: EmployeesListPropTypes) {\r\n  return (\r\n    <section className={styles.employeesList}>\r\n      <h2 className={styles.employeesList__title}>Employees</h2>\r\n      <ul className={styles.employeesList__list}>\r\n        {ALPHABET.map(letter => {\r\n          return (\r\n            <EmployeesLetterGroup\r\n              key={letter}\r\n              letter={letter}\r\n              employeesList={employees[letter]}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n","import { StoreType } from '../../types/types';\r\n\r\nexport const getEmployeesFromStore = (state: StoreType) =>\r\n  state.employees.employees;\r\nexport const getIsLoading = (state: StoreType) => state.employees.isLoading;\r\nexport const getError = (state: StoreType) => state.employees.error;\r\n","export function isEmptyObject(obj: any) {\r\n  return Object.keys(obj).length === 0;\r\n}\r\n","import moment from 'moment';\r\nimport { EmployeesType } from '../../types/types';\r\n\r\nimport styles from './EmployeeBirthdayInfo.module.css';\r\n\r\ntype EmployeeBirthdayInfoPropsType = {\r\n  employee: EmployeesType;\r\n};\r\n\r\nexport function EmployeeBirthdayInfo({\r\n  employee,\r\n}: EmployeeBirthdayInfoPropsType) {\r\n  return (\r\n    <li className={styles.EmployeeBirthdayInfo}>\r\n      <p className={styles.EmployeeBirthdayInfo__text}>\r\n        {employee.lastName} {employee.firstName} -{' '}\r\n        {moment(employee.dob).format('D MMMM, YYYY')} year\r\n      </p>\r\n    </li>\r\n  );\r\n}\r\n","import { EmployeesType } from '../../types/types';\r\nimport { EmployeeBirthdayInfo } from '../EmployeeBirthdayInfo/EmployeeBirthdayInfo';\r\n\r\nimport styles from './EmployeesBirhtdayGroup.module.css';\r\n\r\ntype EmployeesBirhtdayGroupPropsType = {\r\n  month: string;\r\n  employeesList: EmployeesType[];\r\n};\r\n\r\nexport function EmployeesBirhtdayGroup({\r\n  month,\r\n  employeesList,\r\n}: EmployeesBirhtdayGroupPropsType) {\r\n  if (!employeesList) return null;\r\n\r\n  return (\r\n    <li className={styles.employeesBirthdayGroup}>\r\n      <h3 className={styles.employeesBirthdayGroup__month}>{month}</h3>\r\n      {employeesList.length !== 0 && (\r\n        <ul className={styles.employeesBirthdayGroup__list}>\r\n          {employeesList.map(employee => {\r\n            return (\r\n              <EmployeeBirthdayInfo key={employee.id} employee={employee} />\r\n            );\r\n          })}\r\n        </ul>\r\n      )}\r\n    </li>\r\n  );\r\n}\r\n","import {\r\n  getMonthsFromCurrent,\r\n  normalizeActiveEmployeesByMonth,\r\n} from '../../helpers/employeesHelpers';\r\nimport { isEmptyObject } from '../../helpers/helpers';\r\nimport { EmployeesType } from '../../types/types';\r\nimport { EmployeesBirhtdayGroup } from '../EmployeesBirhtdayGroup/EmployeesBirhtdayGroup';\r\n\r\nimport styles from './BirthdayList.module.css';\r\n\r\ntype BirthdayListPropsType = {\r\n  employees: EmployeesType[];\r\n};\r\n\r\nexport function BirthdayList({ employees }: BirthdayListPropsType) {\r\n  const months = getMonthsFromCurrent();\r\n  const normalizedEmployees = normalizeActiveEmployeesByMonth(employees);\r\n\r\n  return (\r\n    <section className={styles.birthdayList}>\r\n      <h2 className={styles.birthdayList__title}>Employees Birthday</h2>\r\n      {isEmptyObject(normalizedEmployees) && <h3>Employees List is empty</h3>}\r\n      {!isEmptyObject(normalizedEmployees) && (\r\n        <ul className={styles.birthdayList__list}>\r\n          {months.map(month => (\r\n            <EmployeesBirhtdayGroup\r\n              key={month}\r\n              month={month}\r\n              employeesList={normalizedEmployees?.[month]}\r\n            />\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n","import moment from 'moment';\r\nimport { EmployeesType, NormalizedEmployeesType } from '../types/types';\r\n\r\nexport function sortEmployees(employees: EmployeesType[]) {\r\n  return employees\r\n    .map(employee => {\r\n      employee.isActive = false;\r\n      return employee;\r\n    })\r\n    .sort((a, b) => a.lastName.localeCompare(b.lastName));\r\n}\r\n\r\nexport function normalizeEmployees(employees: EmployeesType[]) {\r\n  const normalizedEmployees = employees.reduce(\r\n    (acc: NormalizedEmployeesType, employee) => {\r\n      const letter = employee.lastName[0].toLowerCase();\r\n      if (!acc[letter]) {\r\n        acc[letter] = [employee];\r\n      } else {\r\n        acc[letter].push(employee);\r\n      }\r\n      return acc;\r\n    },\r\n    {}\r\n  );\r\n\r\n  return normalizedEmployees;\r\n}\r\n\r\nexport function getMonthsFromCurrent() {\r\n  const result = [];\r\n  const currentMonth = moment().month();\r\n\r\n  const m = moment();\r\n  for (let i = currentMonth; i < currentMonth + 12; i++) {\r\n    result.push(m.month(i).format('MMMM'));\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport function normalizeActiveEmployeesByMonth(employees: EmployeesType[]) {\r\n  const normalizedEmployees = employees.reduce(\r\n    (acc: NormalizedEmployeesType, employee) => {\r\n      if (employee.isActive) {\r\n        const monthOfBirth = moment(employee.dob).format('MMMM');\r\n\r\n        if (!acc[monthOfBirth]) {\r\n          acc[monthOfBirth] = [employee];\r\n        } else {\r\n          acc[monthOfBirth].push(employee);\r\n        }\r\n      }\r\n      return acc;\r\n    },\r\n    {}\r\n  );\r\n\r\n  return normalizedEmployees;\r\n}\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Loader } from '../Loader/Loader';\r\nimport { EmployeesList } from '../EmployeesList/EmployeesList';\r\nimport { normalizeEmployees } from '../../helpers/employeesHelpers';\r\n\r\nimport {\r\n  getEmployeesFromStore,\r\n  getError,\r\n  getIsLoading,\r\n} from '../../store/selectors/employeesSelectors';\r\nimport { getEmployees } from '../../store/thunks/employeesThunk';\r\nimport { BirthdayList } from '../BirthdayList/BirthdayList';\r\n\r\nimport styles from './Employees.module.css';\r\nimport { setEmployees } from '../../store/actions/employeesActions';\r\n\r\nexport function Employees() {\r\n  const employees = useSelector(getEmployeesFromStore);\r\n  const isLoading = useSelector(getIsLoading);\r\n  const error = useSelector(getError);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const employeesFromStorage = localStorage.getItem('employees');\r\n\r\n    if (!employeesFromStorage || JSON.parse(employeesFromStorage).length === 0)\r\n      dispatch(getEmployees());\r\n\r\n    if (employeesFromStorage)\r\n      dispatch(setEmployees(JSON.parse(employeesFromStorage)));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('employees', JSON.stringify(employees));\r\n  }, [employees]);\r\n\r\n  if (error) return <h2>{error}</h2>;\r\n  if (isLoading || employees.length === 0) return <Loader />;\r\n\r\n  const normalizedEmployees = normalizeEmployees(employees);\r\n\r\n  return (\r\n    <main className={styles.container}>\r\n      <EmployeesList employees={normalizedEmployees} />\r\n      <BirthdayList employees={employees} />\r\n    </main>\r\n  );\r\n}\r\n","import axios, { AxiosResponse } from 'axios';\r\nimport { BASE_URL } from '../../helpers/constants';\r\nimport { sortEmployees } from '../../helpers/employeesHelpers';\r\nimport {\r\n  setEmployees,\r\n  setError,\r\n  setLoading,\r\n} from '../actions/employeesActions';\r\n\r\nexport const getEmployees = () => (dispatch: any) => {\r\n  dispatch(setLoading());\r\n\r\n  axios\r\n    .get(BASE_URL)\r\n    .then(({ data }: AxiosResponse) => {\r\n      const sortedEmployees = sortEmployees(data);\r\n      dispatch(setEmployees(sortedEmployees));\r\n    })\r\n    .catch(error => dispatch(setError(error.message)));\r\n};\r\n","import { Employees } from './components/Employees/Employees';\r\n\r\nimport 'normalize.css';\r\nimport './base.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Employees />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './index.css';\r\nimport { store } from './store/store';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"employeeGroup\":\"EmployeesLetterGroup_employeeGroup__J1a4j\",\"employeeGroup__letter\":\"EmployeesLetterGroup_employeeGroup__letter__LRtmU\"};"],"sourceRoot":""}